!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("cornerstone-tools"),require("cornerstone-core")):"function"==typeof define&&define.amd?define("cornerstonetools-rectangle-roi-threshold-segmentation",["cornerstone-tools","cornerstone-core"],t):"object"==typeof exports?exports["cornerstonetools-rectangle-roi-threshold-segmentation"]=t(require("cornerstone-tools"),require("cornerstone-core")):e["cornerstonetools-rectangle-roi-threshold-segmentation"]=t(e.cornerstoneTools,e.cornerstone)}(self,((e,t)=>(()=>{"use strict";var o={213:e=>{e.exports=t},353:t=>{t.exports=e}},n={};function r(e){var t=n[e];if(void 0!==t)return t.exports;var s=n[e]={exports:{}};return o[e](s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var s={};return(()=>{r.d(s,{default:()=>u});var e=r(353),t=r.n(e),o=r(213),n=r.n(o);const{getBoundingBoxAroundPolygon:i,getDiffBetweenPixelData:a}=t().import("util/segmentationUtils"),l=t().import("util/triggerEvent"),c=t().import("util/getLogger")("util:segmentation:operations:paintWithinThresholdInsideOrOutsideRectangle");function d(e,o){const{points:r,configuration:s}=o,{image:d}=e.detail,g=r.map((e=>[e.x,e.y])),[h,u]=i(g,d);!function(e,o,r,s,i){const d=e.detail.element,g=t().getToolState(d,"stack").data[0],{imageIds:h,currentImageIdIndex:u}=g,{segmentIndex:p}=o,{getters:m,setters:f}=t().getModule("segmentation"),x=function(e,t,o){const r=[];let s=e;for(let e=0;e<o;e++){let o=s+e;o>=t.length&&(o-=t.length),r.push({imageIdIndex:o,image:n().imageCache.imageCache[t[o]]?.image})}return r}(u,h,i.numberOfSlices),{width:I,height:y}=e.detail.image,[b,D]=r,[v,w]=s;if(!i.inside){for(let e=0;e<x.length;e++){const{image:t,imageIdIndex:o}=x[e];if(!t){c.warn("Image is undefined, it most likely has not been cached yet.");continue}const n=m.activeLabelmapIndex(d),a=m.labelmap3D(d,n),l=m.labelmap2DByImageIdIndex(a,o,t.rows,t.columns),{pixelData:g}=l;for(let e=0;e<I;e++)for(let o=0;o<r[1];o++){const n=o*I+e,r=t.getPixelData()[n]*t.slope+t.intercept;r>=i.thresholdLow&&r<=i.thresholdHigh&&(g[n]=p)}for(let e=0;e<r[0];e++)for(let o=r[1];o<s[1];o++){const n=o*I+e,r=t.getPixelData()[n]*t.slope+t.intercept;r>=i.thresholdLow&&r<=i.thresholdHigh&&(g[n]=p)}for(let e=s[0];e<I;e++)for(let o=r[1];o<s[1];o++){const n=o*I+e,r=t.getPixelData()[n]*t.slope+t.intercept;r>=i.thresholdLow&&r<=i.thresholdHigh&&(g[n]=p)}for(let e=0;e<I;e++)for(let o=s[1];o<y;o++){const n=o*I+e,r=t.getPixelData()[n]*t.slope+t.intercept;r>=i.thresholdLow&&r<=i.thresholdHigh&&(g[n]=p)}}return}const P=[];for(let e=0;e<x.length;e++){const{image:t,imageIdIndex:o}=x[e];if(!t){c.warn("Image is undefined, it most likely has not been cached yet.");continue}const n=m.activeLabelmapIndex(d),r=m.labelmap3D(d,n),s=m.labelmap2DByImageIdIndex(r,o,t.rows,t.columns),{pixelData:l}=s,g=l.slice();for(let e=b;e<v;e++)for(let o=D;o<w;o++){const n=o*I+e,r=t.getPixelData()[n]*t.slope+t.intercept;r>=i.thresholdLow&&r<=i.thresholdHigh&&(l[n]=p)}const h={imageIdIndex:o,diff:a(g,l)};P.push(h)}for(let e=P.length-1;e>=0;e--)f.pushState(d,[P[e]]),l(d,t().EVENTS.LABELMAP_MODIFIED,{labelmapIndex:m.activeLabelmapIndex(d)})}(e,o,h,u,s)}const g=t().import("base/BaseTool"),{segRectangleFillInsideCursor:h}=t().import("tools/cursors");const u=class extends g{constructor(e={}){super(e,{name:"RectangleROIThresholdSegmentation",strategies:{PAINT:d},cursors:{PAINT:h},configuration:{thresholdLow:200,thresholdHigh:1e3,numberOfSlices:200,inside:!0},defaultStrategy:"PAINT",supportedInteractionTypes:["Mouse","Touch"],mixins:["rectangleSegmentationMixin"]})}applyActiveStrategy(e,t){return t.configuration=this.configuration,this.strategies[this.activeStrategy].call(this,e,t)}}})(),s=s.default})()));